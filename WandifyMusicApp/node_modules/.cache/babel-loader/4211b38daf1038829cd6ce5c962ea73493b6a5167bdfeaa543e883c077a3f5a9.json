{"ast":null,"code":"var _jsxFileName = \"/home/chaitanya/Documents/WandifyMusicApp/wandify_music/src/context/PlayerContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useRef, useState, useEffect } from \"react\";\nimport { songsData } from \"../Assets/assets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContext = /*#__PURE__*/createContext();\nconst PlayerContextProvider = props => {\n  _s();\n  const audioRef = useRef(new Audio());\n  const seekBgRef = useRef();\n  const seekBarRef = useRef();\n  const [track, setTrack] = useState(songsData[0]);\n  const [playStatus, setPlayStatus] = useState(false);\n  const [time, setTime] = useState({\n    currentTime: {\n      second: 0,\n      minute: 0\n    },\n    totalTime: {\n      second: 0,\n      minute: 0\n    }\n  });\n  useEffect(() => {\n    const audio = audioRef.current;\n    audio.src = track.file;\n    audio.load();\n    const setAudioData = () => {\n      setTime(prevTime => ({\n        ...prevTime,\n        totalTime: {\n          minute: Math.floor(audio.duration / 60),\n          second: Math.floor(audio.duration % 60)\n        }\n      }));\n    };\n    const setAudioTime = () => {\n      const currentSeconds = Math.floor(audio.currentTime);\n      const totalSeconds = Math.floor(audio.duration);\n      setTime(prevTime => ({\n        ...prevTime,\n        currentTime: {\n          minute: Math.floor(currentSeconds / 60),\n          second: currentSeconds % 60\n        }\n      }));\n\n      // Update seek bar\n      if (seekBarRef.current && seekBgRef.current) {\n        const progress = currentSeconds / totalSeconds * 100;\n        seekBarRef.current.style.width = `${progress}%`;\n      }\n    };\n\n    // Add event listeners\n    audio.addEventListener(\"loadeddata\", setAudioData);\n    audio.addEventListener(\"timeupdate\", setAudioTime);\n\n    // Cleanup function\n    return () => {\n      audio.removeEventListener(\"loadeddata\", setAudioData);\n      audio.removeEventListener(\"timeupdate\", setAudioTime);\n    };\n  }, [track]);\n  const play = () => {\n    if (audioRef.current.src) {\n      audioRef.current.play().then(() => {\n        setPlayStatus(true);\n        console.log(\"Playback started successfully\");\n      }).catch(error => {\n        console.error(\"Playback failed\", error);\n        setPlayStatus(false);\n      });\n    } else {\n      console.error(\"No audio source set\");\n    }\n  };\n  const pause = () => {\n    audioRef.current.pause();\n    setPlayStatus(false);\n  };\n  const setNewTrack = newTrack => {\n    setTrack(newTrack);\n    setPlayStatus(false);\n  };\n  const handleSeek = e => {\n    if (seekBgRef.current) {\n      const seekPosition = e.nativeEvent.offsetX / seekBgRef.current.clientWidth * audioRef.current.duration;\n      audioRef.current.currentTime = seekPosition;\n    }\n  };\n  const ContextValue = {\n    audioRef,\n    seekBarRef,\n    seekBgRef,\n    track,\n    setTrack: setNewTrack,\n    playStatus,\n    setPlayStatus,\n    time,\n    setTime,\n    play,\n    pause,\n    handleSeek\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: ContextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerContextProvider, \"xk1fkKfYaeHzvaCfQoP4DAeVhYU=\");\n_c = PlayerContextProvider;\nexport { PlayerContext, PlayerContextProvider };\nvar _c;\n$RefreshReg$(_c, \"PlayerContextProvider\");","map":{"version":3,"names":["createContext","useRef","useState","useEffect","songsData","jsxDEV","_jsxDEV","PlayerContext","PlayerContextProvider","props","_s","audioRef","Audio","seekBgRef","seekBarRef","track","setTrack","playStatus","setPlayStatus","time","setTime","currentTime","second","minute","totalTime","audio","current","src","file","load","setAudioData","prevTime","Math","floor","duration","setAudioTime","currentSeconds","totalSeconds","progress","style","width","addEventListener","removeEventListener","play","then","console","log","catch","error","pause","setNewTrack","newTrack","handleSeek","e","seekPosition","nativeEvent","offsetX","clientWidth","ContextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/chaitanya/Documents/WandifyMusicApp/wandify_music/src/context/PlayerContext.js"],"sourcesContent":["import { createContext, useRef, useState, useEffect } from \"react\";\nimport { songsData } from \"../Assets/assets\";\n\nconst PlayerContext = createContext();\n\nconst PlayerContextProvider = (props) => {\n  const audioRef = useRef(new Audio());\n  const seekBgRef = useRef();\n  const seekBarRef = useRef();\n\n  const [track, setTrack] = useState(songsData[0]);\n  const [playStatus, setPlayStatus] = useState(false);\n  const [time, setTime] = useState({\n    currentTime: {\n      second: 0,\n      minute: 0,\n    },\n    totalTime: {\n      second: 0,\n      minute: 0,\n    },\n  });\n\n  useEffect(() => {\n    const audio = audioRef.current;\n    audio.src = track.file;\n    audio.load();\n\n    const setAudioData = () => {\n      setTime((prevTime) => ({\n        ...prevTime,\n        totalTime: {\n          minute: Math.floor(audio.duration / 60),\n          second: Math.floor(audio.duration % 60),\n        },\n      }));\n    };\n\n    const setAudioTime = () => {\n      const currentSeconds = Math.floor(audio.currentTime);\n      const totalSeconds = Math.floor(audio.duration);\n      setTime((prevTime) => ({\n        ...prevTime,\n        currentTime: {\n          minute: Math.floor(currentSeconds / 60),\n          second: currentSeconds % 60,\n        },\n      }));\n\n      // Update seek bar\n      if (seekBarRef.current && seekBgRef.current) {\n        const progress = (currentSeconds / totalSeconds) * 100;\n        seekBarRef.current.style.width = `${progress}%`;\n      }\n    };\n\n    // Add event listeners\n    audio.addEventListener(\"loadeddata\", setAudioData);\n    audio.addEventListener(\"timeupdate\", setAudioTime);\n\n    // Cleanup function\n    return () => {\n      audio.removeEventListener(\"loadeddata\", setAudioData);\n      audio.removeEventListener(\"timeupdate\", setAudioTime);\n    };\n  }, [track]);\n\n  const play = () => {\n    if (audioRef.current.src) {\n      audioRef.current\n        .play()\n        .then(() => {\n          setPlayStatus(true);\n          console.log(\"Playback started successfully\");\n        })\n        .catch((error) => {\n          console.error(\"Playback failed\", error);\n          setPlayStatus(false);\n        });\n    } else {\n      console.error(\"No audio source set\");\n    }\n  };\n\n  const pause = () => {\n    audioRef.current.pause();\n    setPlayStatus(false);\n  };\n\n  const setNewTrack = (newTrack) => {\n    setTrack(newTrack);\n    setPlayStatus(false);\n  };\n\n  const handleSeek = (e) => {\n    if (seekBgRef.current) {\n      const seekPosition =\n        (e.nativeEvent.offsetX / seekBgRef.current.clientWidth) *\n        audioRef.current.duration;\n      audioRef.current.currentTime = seekPosition;\n    }\n  };\n\n  const ContextValue = {\n    audioRef,\n    seekBarRef,\n    seekBgRef,\n    track,\n    setTrack: setNewTrack,\n    playStatus,\n    setPlayStatus,\n    time,\n    setTime,\n    play,\n    pause,\n    handleSeek,\n  };\n\n  return (\n    <PlayerContext.Provider value={ContextValue}>\n      {props.children}\n    </PlayerContext.Provider>\n  );\n};\n\nexport { PlayerContext, PlayerContextProvider };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}